# Docker Compose Override for Development Environment
# This file extends docker-compose.yml with development-specific configurations
# It's automatically loaded when running docker-compose commands

version: '3.9'

services:
  # Development overrides for PostgreSQL
  db:
    environment:
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    volumes:
      - ./scripts/dev-init-db.sh:/docker-entrypoint-initdb.d/dev-init-db.sh
    command: >
      postgres 
      -c log_statement=all 
      -c log_destination=stderr 
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements

  # Development overrides for Redis
  redis:
    command: redis-server --requirepass ${REDIS_PASSWORD:-focushive_pass} --appendonly yes --save 60 1000 --loglevel verbose

  # Development overrides for Identity Service Database
  identity-db:
    environment:
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    volumes:
      - ./scripts/dev-init-identity-db.sh:/docker-entrypoint-initdb.d/dev-init-identity-db.sh
    command: >
      postgres 
      -c log_statement=all 
      -c log_destination=stderr 
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements

  # Development overrides for Identity Service Redis
  identity-redis:
    command: redis-server --requirepass ${IDENTITY_REDIS_PASSWORD:-identity_redis_pass} --appendonly yes --save 60 1000 --loglevel verbose

  # Development overrides for Identity Service
  identity-service:
    environment:
      LOG_LEVEL: DEBUG
      SHOW_SQL: "true"
      SPRING_PROFILES_ACTIVE: development
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    volumes:
      - ./identity-service/src:/app/src:ro
      - ./logs:/app/logs
    # Enable hot reload for development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.identity-dev.rule=Host(`identity-dev.localhost`)"
      - "traefik.http.routers.identity-dev.entrypoints=web"

  # Development overrides for Backend
  backend:
    environment:
      LOG_LEVEL: DEBUG
      SHOW_SQL: "true"
      SPRING_PROFILES_ACTIVE: development
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    volumes:
      - ./backend/src:/app/src:ro
      - ./logs:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-dev.rule=Host(`backend-dev.localhost`)"
      - "traefik.http.routers.backend-dev.entrypoints=web"

  # Development overrides for Frontend
  web:
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:80
      VITE_IDENTITY_SERVICE_URL: http://localhost:80
      VITE_DEV_MODE: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./logs:/app/logs
    # Enable hot module replacement
    stdin_open: true
    tty: true

  # Development NGINX with enhanced debugging
  nginx:
    volumes:
      - ./nginx/dev/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/dev/conf.d:/etc/nginx/conf.d:ro
      - ./logs:/var/log/nginx
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-dev.rule=Host(`dev.localhost`)"
      - "traefik.http.routers.nginx-dev.entrypoints=web"

  # Development-only services
  adminer:
    image: adminer:4.8.1
    container_name: focushive-adminer
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: dracula
    depends_on:
      - db
      - identity-db
    networks:
      - focushive-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
      - "traefik.http.routers.adminer.entrypoints=web"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: focushive-redis-commander
    ports:
      - "8083:8081"
    environment:
      REDIS_HOSTS: |
        main:redis:6379:0:${REDIS_PASSWORD:-focushive_pass},
        identity:identity-redis:6379:0:${IDENTITY_REDIS_PASSWORD:-identity_redis_pass}
    depends_on:
      - redis
      - identity-redis
    networks:
      - focushive-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`redis.localhost`)"
      - "traefik.http.routers.redis-commander.entrypoints=web"

  # Development Traefik for easier service access
  traefik:
    image: traefik:v3.0
    container_name: focushive-traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --log.level=DEBUG
    ports:
      - "8084:8080"  # Traefik dashboard
      - "8085:80"    # HTTP entrypoint
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - focushive-network

# Development-specific volumes
volumes:
  # Named volumes for development data that persists
  dev_postgres_data:
    driver: local
  dev_redis_data:
    driver: local
  dev_identity_db_data:
    driver: local
  dev_identity_redis_data:
    driver: local

networks:
  focushive-network:
    external: false