spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/focushive?currentSchema=music
    username: focushive_user
    password: focushive_pass
  
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  redis:
    host: localhost
    port: 6379
    password: focushive_pass

# Development service URLs (all services running locally)
services:
  user-service:
    url: http://localhost:8080
  hive-service:
    url: http://localhost:8080
  session-service:
    url: http://localhost:8080
  analytics-service:
    url: http://localhost:8080

# Development Spotify credentials (use environment variables or application-local.yml)
spotify:
  client-id: ${SPOTIFY_CLIENT_ID:development-client-id}
  client-secret: ${SPOTIFY_CLIENT_SECRET:development-client-secret}
  redirect-uri: http://localhost:8084/api/v1/music/streaming/spotify/callback

# Development configuration
app:
  music:
    recommendation:
      cache-ttl: 300 # 5 minutes for development
      max-recommendations: 10 # Smaller for testing
    playlist:
      max-size: 100 # Smaller for development
      collaborative-max-contributors: 10
    session:
      max-duration: 60 # 1 hour for development testing

server:
  port: 8084

logging:
  level:
    com.focushive.music: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    feign: DEBUG
    org.springframework.data.jpa: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Relaxed circuit breaker settings for development
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 80
      hive-service:
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 80
      analytics-service:
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 80