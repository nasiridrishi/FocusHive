# Docker Compose Testing Configuration
# Use: docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d

version: '3.9'

services:
  # Test PostgreSQL Database
  test-db:
    image: postgres:16-alpine
    container_name: focushive-test-db
    environment:
      POSTGRES_DB: focushive_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    ports:
      - "5434:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./scripts/test-init-db.sh:/docker-entrypoint-initdb.d/test-init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d focushive_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - focushive-test-network
    command: >
      postgres 
      -c fsync=off 
      -c synchronous_commit=off 
      -c checkpoint_segments=32 
      -c checkpoint_completion_target=0.9 
      -c wal_buffers=16MB 
      -c shared_buffers=256MB

  # Test Redis
  test-redis:
    image: redis:7-alpine
    container_name: focushive-test-redis
    command: redis-server --requirepass test_pass --save "" --appendonly no
    ports:
      - "6381:6379"
    volumes:
      - test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "test_pass", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - focushive-test-network

  # Test Identity Service Database
  test-identity-db:
    image: postgres:16-alpine
    container_name: test-identity-db
    environment:
      POSTGRES_DB: identity_test
      POSTGRES_USER: identity_test_user
      POSTGRES_PASSWORD: identity_test_pass
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    ports:
      - "5435:5432"
    volumes:
      - test_identity_db_data:/var/lib/postgresql/data
      - ./scripts/test-init-identity-db.sh:/docker-entrypoint-initdb.d/test-init-identity-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U identity_test_user -d identity_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - focushive-test-network
    command: >
      postgres 
      -c fsync=off 
      -c synchronous_commit=off 
      -c checkpoint_segments=32 
      -c checkpoint_completion_target=0.9 
      -c wal_buffers=16MB 
      -c shared_buffers=128MB

  # Test Identity Service Redis
  test-identity-redis:
    image: redis:7-alpine
    container_name: test-identity-redis
    command: redis-server --requirepass identity_test_pass --save "" --appendonly no
    ports:
      - "6382:6379"
    volumes:
      - test_identity_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "identity_test_pass", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - focushive-test-network

  # Test Identity Service
  test-identity-service:
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    container_name: test-identity-service
    environment:
      # Database
      DB_HOST: test-identity-db
      DB_PORT: 5432
      DB_NAME: identity_test
      DB_USER: identity_test_user
      DB_PASSWORD: identity_test_pass
      # Redis
      REDIS_HOST: test-identity-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: identity_test_pass
      # Application
      SERVER_PORT: 8081
      LOG_LEVEL: DEBUG
      SHOW_SQL: "true"
      SPRING_PROFILES_ACTIVE: test
      # Security (test keys)
      KEY_STORE_PASSWORD: testpassword
      PRIVATE_KEY_PASSWORD: testpassword
      FOCUSHIVE_CLIENT_SECRET: testsecret
      # CORS
      CORS_ORIGINS: "*"
      # Management
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    ports:
      - "8091:8081"
    volumes:
      - ./logs/test-identity-service:/app/logs
    depends_on:
      test-identity-db:
        condition: service_healthy
      test-identity-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - focushive-test-network

  # Test Backend Service
  test-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: test-focushive-backend
    environment:
      # Database
      DB_HOST: test-db
      DB_PORT: 5432
      DB_NAME: focushive_test
      DB_USER: test_user
      DB_PASSWORD: test_pass
      # Redis
      REDIS_HOST: test-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: test_pass
      # Identity Service
      IDENTITY_SERVICE_URL: http://test-identity-service:8081
      # Application
      SERVER_PORT: 8080
      LOG_LEVEL: DEBUG
      SHOW_SQL: "true"
      SPRING_PROFILES_ACTIVE: test
      JWT_SECRET: test-jwt-secret-key-for-testing-only
      JWT_EXPIRATION: 86400000
      # Management
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    ports:
      - "8090:8080"
    volumes:
      - ./logs/test-backend:/app/logs
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-identity-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - focushive-test-network

  # Integration Test Runner
  integration-tests:
    build:
      context: ./tests
      dockerfile: Dockerfile
    container_name: focushive-integration-tests
    environment:
      TEST_BACKEND_URL: http://test-backend:8080
      TEST_IDENTITY_SERVICE_URL: http://test-identity-service:8081
      TEST_DB_HOST: test-db
      TEST_DB_PORT: 5432
      TEST_DB_NAME: focushive_test
      TEST_DB_USER: test_user
      TEST_DB_PASSWORD: test_pass
      TEST_IDENTITY_DB_HOST: test-identity-db
      TEST_IDENTITY_DB_PORT: 5432
      TEST_IDENTITY_DB_NAME: identity_test
      TEST_IDENTITY_DB_USER: identity_test_user
      TEST_IDENTITY_DB_PASSWORD: identity_test_pass
      JUNIT_PLATFORM_OUTPUT_CAPTURE_STDOUT: "true"
      JUNIT_PLATFORM_OUTPUT_CAPTURE_STDERR: "true"
    volumes:
      - ./test-results:/app/test-results
      - ./logs/integration-tests:/app/logs
    depends_on:
      test-backend:
        condition: service_healthy
      test-identity-service:
        condition: service_healthy
    networks:
      - focushive-test-network
    profiles:
      - integration-tests

  # E2E Test Runner with Playwright
  e2e-tests:
    build:
      context: ./e2e-tests
      dockerfile: Dockerfile
    container_name: focushive-e2e-tests
    environment:
      PLAYWRIGHT_BASE_URL: http://test-nginx
      TEST_USER_EMAIL: test@focushive.com
      TEST_USER_PASSWORD: testpassword123
      PLAYWRIGHT_BROWSERS_PATH: /app/browsers
    volumes:
      - ./e2e-test-results:/app/test-results
      - ./logs/e2e-tests:/app/logs
    depends_on:
      test-nginx:
        condition: service_healthy
    networks:
      - focushive-test-network
    profiles:
      - e2e-tests

  # Test NGINX
  test-nginx:
    image: nginx:1.25-alpine
    container_name: test-focushive-nginx
    ports:
      - "8089:80"
    volumes:
      - ./nginx/test/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/test/conf.d:/etc/nginx/conf.d:ro
      - ./logs/test-nginx:/var/log/nginx
    depends_on:
      - test-backend
      - test-identity-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - focushive-test-network

  # Test Data Seeder
  test-data-seeder:
    build:
      context: ./scripts/test-data
      dockerfile: Dockerfile
    container_name: focushive-test-data-seeder
    environment:
      DB_HOST: test-db
      DB_PORT: 5432
      DB_NAME: focushive_test
      DB_USER: test_user
      DB_PASSWORD: test_pass
      IDENTITY_DB_HOST: test-identity-db
      IDENTITY_DB_PORT: 5432
      IDENTITY_DB_NAME: identity_test
      IDENTITY_DB_USER: identity_test_user
      IDENTITY_DB_PASSWORD: identity_test_pass
      BACKEND_URL: http://test-backend:8080
      IDENTITY_SERVICE_URL: http://test-identity-service:8081
    volumes:
      - ./logs/test-data-seeder:/app/logs
    depends_on:
      test-backend:
        condition: service_healthy
      test-identity-service:
        condition: service_healthy
    networks:
      - focushive-test-network
    profiles:
      - test-data

# Test-specific volumes (ephemeral)
volumes:
  test_postgres_data:
    driver: local
  test_redis_data:
    driver: local
  test_identity_db_data:
    driver: local
  test_identity_redis_data:
    driver: local

# Isolated test network
networks:
  focushive-test-network:
    driver: bridge
    name: focushive-test-network
    ipam:
      config:
        - subnet: 172.22.0.0/16