openapi: 3.0.3
info:
  title: FocusHive API
  description: API for FocusHive digital co-working platform
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local development server

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check endpoint
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid request
        '409':
          description: User already exists

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /hives:
    get:
      tags:
        - Hives
      summary: Get all hives
      operationId: getAllHives
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of hives
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HivePage'
        '401':
          description: Unauthorized

    post:
      tags:
        - Hives
      summary: Create a new hive
      operationId: createHive
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHiveRequest'
      responses:
        '201':
          description: Hive created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hive'
        '401':
          description: Unauthorized
        '400':
          description: Invalid request

  /hives/{hiveId}:
    get:
      tags:
        - Hives
      summary: Get hive by ID
      operationId: getHiveById
      security:
        - bearerAuth: []
      parameters:
        - name: hiveId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Hive details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hive'
        '401':
          description: Unauthorized
        '404':
          description: Hive not found

  /hives/{hiveId}/join:
    post:
      tags:
        - Hives
      summary: Join a hive
      operationId: joinHive
      security:
        - bearerAuth: []
      parameters:
        - name: hiveId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully joined hive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HiveMember'
        '401':
          description: Unauthorized
        '404':
          description: Hive not found
        '409':
          description: Already a member

  /hives/{hiveId}/leave:
    post:
      tags:
        - Hives
      summary: Leave a hive
      operationId: leaveHive
      security:
        - bearerAuth: []
      parameters:
        - name: hiveId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully left hive
        '401':
          description: Unauthorized
        '404':
          description: Hive not found or not a member

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: UP
        service:
          type: string
          example: focushive-backend
        timestamp:
          type: string
          format: date-time

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        username:
          type: string
          minLength: 3

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        createdAt:
          type: string
          format: date-time

    CreateHiveRequest:
      type: object
      required:
        - name
        - description
        - maxMembers
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 100
        description:
          type: string
          maxLength: 500
        maxMembers:
          type: integer
          minimum: 2
          maximum: 50
        isPrivate:
          type: boolean
          default: false

    Hive:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
          format: uuid
        maxMembers:
          type: integer
        currentMembers:
          type: integer
        isPrivate:
          type: boolean
        createdAt:
          type: string
          format: date-time
        members:
          type: array
          items:
            $ref: '#/components/schemas/HiveMember'

    HiveMember:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        username:
          type: string
        joinedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [ACTIVE, AWAY, OFFLINE]
        currentTask:
          type: string

    HivePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Hive'
        totalElements:
          type: integer
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer