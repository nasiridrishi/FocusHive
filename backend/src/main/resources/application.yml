spring:
  application:
    name: focushive-backend
  main:
    allow-bean-definition-overriding: true
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:focushive}
    username: ${DB_USER:focushive_user}
    password: ${DB_PASSWORD:focushive_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${FORMAT_SQL:false}
        use_sql_comments: ${USE_SQL_COMMENTS:false}
        jdbc:
          batch_size: 25
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
    show-sql: ${SHOW_SQL:false}
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:focushive_pass}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 15
        max-idle: 8
        min-idle: 2
        max-wait: -1ms
      shutdown-timeout: 100ms
  
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
  
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: none
  
  # Circuit breaker configuration
  circuitbreaker:
    instances:
      identity-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        slowCallRateThreshold: 80
        slowCallDurationThreshold: 3s
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        ignoreExceptions:
          - com.focushive.api.exception.IdentityServiceException

# Identity Service configuration
identity:
  service:
    url: ${IDENTITY_SERVICE_URL:http://localhost:8081}
    connect-timeout: ${IDENTITY_SERVICE_CONNECT_TIMEOUT:5000}
    read-timeout: ${IDENTITY_SERVICE_READ_TIMEOUT:10000}
    api-key: ${IDENTITY_SERVICE_API_KEY:}

# Application configuration
app:
  version: ${APP_VERSION:1.0.0}

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    com.focushive: ${LOG_LEVEL:INFO}
    org.springframework.web: ${LOG_LEVEL:WARN}
    org.springframework.security: ${LOG_LEVEL:WARN}
    feign: ${FEIGN_LOG_LEVEL:DEBUG}
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

# Distributed Tracing Configuration
management:
  tracing:
    sampling:
      probability: ${TRACING_SAMPLING_PROBABILITY:1.0}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,httptrace
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      percentiles:
        "[http.server.requests]": 0.5,0.95,0.99
    web:
      server:
        request:
          autotime:
            enabled: true

# Feign configuration
feign:
  circuitbreaker:
    enabled: true
  client:
    config:
      identity-service:
        connectTimeout: ${IDENTITY_SERVICE_CONNECT_TIMEOUT:5000}
        readTimeout: ${IDENTITY_SERVICE_READ_TIMEOUT:10000}
        loggerLevel: basic

# Comprehensive Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      identity-service:
        registerHealthIndicator: true
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 60
        slowCallRateThreshold: 80
        slowCallDurationThreshold: 3s
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - feign.RetryableException
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException$BadRequest
          - org.springframework.web.client.HttpClientErrorException$Unauthorized
          - org.springframework.web.client.HttpClientErrorException$Forbidden
          - org.springframework.web.client.HttpClientErrorException$NotFound
  
  retry:
    instances:
      identity-service:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - feign.RetryableException
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException$BadRequest
          - org.springframework.web.client.HttpClientErrorException$Unauthorized
          - org.springframework.web.client.HttpClientErrorException$Forbidden
          - org.springframework.web.client.HttpClientErrorException$NotFound
  
  timelimiter:
    instances:
      identity-service:
        timeoutDuration: 10s
        cancelRunningFuture: true
  
  ratelimiter:
    instances:
      identity-service:
        registerHealthIndicator: true
        limitRefreshPeriod: 1s
        limitForPeriod: 100
        timeoutDuration: 0s
  
  bulkhead:
    instances:
      identity-service:
        maxConcurrentCalls: 50
        maxWaitDuration: 1s