name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Run tests
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
      run: |
        chmod +x gradlew
        ./gradlew test
    
    - name: Build backend
      working-directory: ./backend
      run: ./gradlew build

  identity-service-test:
    name: Identity Service Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Run tests
      working-directory: ./identity-service
      env:
        SPRING_PROFILES_ACTIVE: test
      run: |
        chmod +x gradlew
        ./gradlew test
    
    - name: Build identity service
      working-directory: ./identity-service
      run: ./gradlew build

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linting
      working-directory: ./frontend
      run: npm run lint
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --run
    
    - name: Build
      working-directory: ./frontend
      run: npm run build

  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [backend-test, identity-service-test, frontend-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare repository name
      id: repo
      run: |
        echo "repository=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ghcr.io/${{ steps.repo.outputs.repository }}/backend:latest
          ghcr.io/${{ steps.repo.outputs.repository }}/backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ghcr.io/${{ steps.repo.outputs.repository }}/frontend:latest
          ghcr.io/${{ steps.repo.outputs.repository }}/frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push identity service
      uses: docker/build-push-action@v5
      with:
        context: ./identity-service
        push: true
        tags: |
          ghcr.io/${{ steps.repo.outputs.repository }}/identity-service:latest
          ghcr.io/${{ steps.repo.outputs.repository }}/identity-service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max