server:
  port: 8090
  servlet:
    context-path: /api

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allow-credentials: true
            allowed-origin-patterns: "*"
            allowed-headers: "*"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            exposed-headers:
              - Authorization
              - X-Rate-Limit-Remaining
              - X-Rate-Limit-Retry-After-Seconds
      
      # Service discovery
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      # Route definitions
      routes:
        # Identity Service - Authentication & Authorization
        - id: identity-service
          uri: http://localhost:8081
          predicates:
            - Path=/auth/**, /oauth2/**, /userinfo, /profile/**, /personas/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: identity-service-cb
                fallbackUri: forward:/fallback/identity
            - StripPrefix=0
        
        # FocusHive Backend - Core application logic
        - id: focushive-backend
          uri: http://localhost:8080
          predicates:
            - Path=/hives/**, /presence/**, /timers/**, /focus-sessions/**, /ws/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 200
                redis-rate-limiter.burstCapacity: 400
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: focushive-backend-cb
                fallbackUri: forward:/fallback/focushive
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Music Service - Spotify integration
        - id: music-service
          uri: http://localhost:8082
          predicates:
            - Path=/music/**, /playlists/**, /spotify/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: music-service-cb
                fallbackUri: forward:/fallback/music
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Notification Service - Multi-channel notifications
        - id: notification-service
          uri: http://localhost:8083
          predicates:
            - Path=/notifications/**, /preferences/notifications/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: notification-service-cb
                fallbackUri: forward:/fallback/notifications
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Chat Service - Real-time messaging
        - id: chat-service
          uri: http://localhost:8084
          predicates:
            - Path=/chat/**, /messages/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 500
                redis-rate-limiter.burstCapacity: 1000
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: chat-service-cb
                fallbackUri: forward:/fallback/chat
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Analytics Service - Productivity tracking
        - id: analytics-service
          uri: http://localhost:8085
          predicates:
            - Path=/analytics/**, /reports/**, /insights/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: analytics-service-cb
                fallbackUri: forward:/fallback/analytics
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Forum Service - Community discussions
        - id: forum-service
          uri: http://localhost:8086
          predicates:
            - Path=/forum/**, /posts/**, /topics/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: forum-service-cb
                fallbackUri: forward:/fallback/forum
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Buddy Service - Accountability partners
        - id: buddy-service
          uri: http://localhost:8087
          predicates:
            - Path=/buddies/**, /partnerships/**, /accountability/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
                redis-rate-limiter.requestedTokens: 1
            - name: CircuitBreaker
              args:
                name: buddy-service-cb
                fallbackUri: forward:/fallback/buddy
            - JwtAuthenticationFilter
            - StripPrefix=0
        
        # Health checks route (no auth required)
        - id: health-checks
          uri: http://localhost:8090
          predicates:
            - Path=/health/**, /actuator/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
            - StripPrefix=0
      
      # Default filters applied to all routes
      default-filters:
        - name: GlobalFilter
        - name: Retry
          args:
            retries: 3
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
  
  # Redis configuration for rate limiting and caching
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      connect-timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/oauth2/jwks
          issuer-uri: http://localhost:8081
  
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000  # 5 minutes

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      identity-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
      focushive-backend-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
      music-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 2
      notification-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
      chat-service-cb:
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 40
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 5
      analytics-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 2
      forum-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
      buddy-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 2

# Logging configuration
logging:
  level:
    com.focushive.gateway: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"