# Chat Service Configuration
spring:
  application:
    name: chat-service
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5434}/chat_service
    username: ${DB_USERNAME:chat_user}
    password: ${DB_PASSWORD:chat_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
  
  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    schemas: public
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      database: 2
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8081/identity}
          jwk-set-uri: ${JWT_ISSUER_URI:http://localhost:8081/identity}/oauth2/jwks

# Server Configuration
server:
  port: ${SERVER_PORT:8084}
  servlet:
    context-path: /chat
  error:
    include-message: always
    include-binding-errors: always

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.focushive.chat: ${LOG_LEVEL:INFO}
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Custom Application Configuration
chat:
  websocket:
    allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
    endpoint: /ws/chat
    message-broker-prefix: /topic
    app-destination-prefix: /app
  
  redis:
    channel-prefix: chat
    message-expiry: PT24H
    typing-timeout: PT10S
  
  message:
    max-length: 1000
    history-limit: 100
    batch-size: 50

# Profile-specific Configuration
---
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  flyway:
    enabled: false

---
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false
  
logging:
  level:
    com.focushive.chat: INFO
    org.springframework.web.socket: WARN
    org.springframework.messaging: WARN