# ============================================================================
# FocusHive Buddy Service - Docker Compose Configuration
# ============================================================================
# Single source of truth deployment using .env file
# All configuration managed through environment variables

services:
  # ============================================================================
  # PostgreSQL Database
  # ============================================================================
  focushive_buddy_service_postgres:
    image: postgres:15-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-focushive_buddy_service_postgres}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${POSTGRES_VOLUME_NAME:-focushive_buddy_service_postgres_data}:/var/lib/postgresql/data
    # Port not exposed to host - only accessible within Docker network
    networks:
      - focushive-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60s}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Redis Cache
  # ============================================================================
  focushive_buddy_service_redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME:-focushive_buddy_service_redis}
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_VOLUME_NAME:-focushive_buddy_service_redis_data}:/data
    # Port not exposed to host - only accessible within Docker network
    networks:
      - focushive-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Buddy Service Application
  # ============================================================================
  focushive_buddy_service_app:
    build:
      context: .
      dockerfile: ${DOCKERFILE_NAME:-Dockerfile.production}
      args:
        - JAR_FILE=build/libs/buddy-service.jar
    image: ${SERVICE_NAME:-buddy-service}:${SERVICE_VERSION:-latest}
    container_name: ${APP_CONTAINER_NAME:-focushive_buddy_service_app}
    environment:
      # Spring Profiles
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

      # Server Configuration
      SERVER_PORT: ${SERVER_PORT}
      MANAGEMENT_SERVER_PORT: ${MANAGEMENT_SERVER_PORT}

      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: ${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: ${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE}
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: ${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT}

      # Redis Configuration
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_DATA_REDIS_DATABASE: ${REDIS_DATABASE}
      SPRING_DATA_REDIS_TIMEOUT: ${SPRING_DATA_REDIS_TIMEOUT}

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}

      # Service URLs
      IDENTITY_SERVICE_URL: ${IDENTITY_SERVICE_URL}
      BACKEND_SERVICE_URL: ${BACKEND_SERVICE_URL}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL}

      # Buddy Service Configuration
      BUDDY_MATCHING_MAX_SUGGESTIONS: ${BUDDY_MATCHING_MAX_SUGGESTIONS}
      BUDDY_MATCHING_COMPATIBILITY_THRESHOLD: ${BUDDY_MATCHING_COMPATIBILITY_THRESHOLD}
      BUDDY_MATCHING_QUEUE_SIZE: ${BUDDY_MATCHING_QUEUE_SIZE}
      BUDDY_MATCHING_INTERVAL_MS: ${BUDDY_MATCHING_INTERVAL_MS}

      # Matching Weights
      BUDDY_MATCHING_WEIGHTS_TIMEZONE: ${BUDDY_MATCHING_WEIGHTS_TIMEZONE}
      BUDDY_MATCHING_WEIGHTS_INTERESTS: ${BUDDY_MATCHING_WEIGHTS_INTERESTS}
      BUDDY_MATCHING_WEIGHTS_GOALS: ${BUDDY_MATCHING_WEIGHTS_GOALS}
      BUDDY_MATCHING_WEIGHTS_ACTIVITY: ${BUDDY_MATCHING_WEIGHTS_ACTIVITY}
      BUDDY_MATCHING_WEIGHTS_COMMUNICATION: ${BUDDY_MATCHING_WEIGHTS_COMMUNICATION}
      BUDDY_MATCHING_WEIGHTS_PERSONALITY: ${BUDDY_MATCHING_WEIGHTS_PERSONALITY}

      # Partnership Configuration
      BUDDY_PARTNERSHIP_MAX_PER_USER: ${BUDDY_PARTNERSHIP_MAX_PER_USER}
      BUDDY_PARTNERSHIP_MIN_DURATION_DAYS: ${BUDDY_PARTNERSHIP_MIN_DURATION_DAYS}
      BUDDY_PARTNERSHIP_DEFAULT_DURATION_DAYS: ${BUDDY_PARTNERSHIP_DEFAULT_DURATION_DAYS}

      # Check-in Configuration
      BUDDY_CHECKIN_REMINDER_HOUR: ${BUDDY_CHECKIN_REMINDER_HOUR}
      BUDDY_CHECKIN_GRACE_PERIOD_HOURS: ${BUDDY_CHECKIN_GRACE_PERIOD_HOURS}

      # Scheduler Configuration
      BUDDY_SCHEDULER_ENABLED: ${BUDDY_SCHEDULER_ENABLED}

      # Logging
      LOGGING_LEVEL_COM_FOCUSHIVE_BUDDY: ${LOGGING_LEVEL_COM_FOCUSHIVE_BUDDY}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB}

      # Monitoring
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS}

      # Swagger
      SPRINGDOC_API_DOCS_ENABLED: ${SPRINGDOC_API_DOCS_ENABLED}
      SPRINGDOC_SWAGGER_UI_ENABLED: ${SPRINGDOC_SWAGGER_UI_ENABLED}

      # JVM Options
      JAVA_OPTS: ${JAVA_OPTS}

      # Flyway
      SPRING_FLYWAY_ENABLED: ${SPRING_FLYWAY_ENABLED}
      SPRING_FLYWAY_LOCATIONS: ${SPRING_FLYWAY_LOCATIONS}
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: ${SPRING_FLYWAY_BASELINE_ON_MIGRATE}

      # CORS
      BUDDY_CORS_ALLOWED_ORIGINS: ${BUDDY_CORS_ALLOWED_ORIGINS}
      BUDDY_CORS_ALLOWED_METHODS: ${BUDDY_CORS_ALLOWED_METHODS}
      BUDDY_CORS_ALLOWED_HEADERS: ${BUDDY_CORS_ALLOWED_HEADERS}
      BUDDY_CORS_ALLOW_CREDENTIALS: ${BUDDY_CORS_ALLOW_CREDENTIALS}

    ports:
      - "${APP_EXTERNAL_PORT:-8087}:${SERVER_PORT:-8087}"
      - "${MANAGEMENT_SERVER_PORT:-8088}:${MANAGEMENT_SERVER_PORT:-8088}"
    networks:
      - focushive-shared-network
    depends_on:
      focushive_buddy_service_postgres:
        condition: service_healthy
      focushive_buddy_service_redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${SERVER_PORT}/api/v1/health"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60s}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "com.focushive.service=buddy"
      - "com.focushive.version=${SERVICE_VERSION}"
      - "com.focushive.environment=${ENVIRONMENT}"

# ============================================================================
# Networks
# ============================================================================
networks:
  focushive-shared-network:
    name: focushive-shared-network
    driver: bridge
    external: true

# ============================================================================
# Volumes
# ============================================================================
volumes:
  focushive_buddy_service_postgres_data:
    name: ${POSTGRES_VOLUME_NAME:-focushive_buddy_service_postgres_data}
    driver: local
    labels:
      - "com.focushive.service=buddy"
      - "com.focushive.type=database"

  focushive_buddy_service_redis_data:
    name: ${REDIS_VOLUME_NAME:-focushive_buddy_service_redis_data}
    driver: local
    labels:
      - "com.focushive.service=buddy"
      - "com.focushive.type=cache"