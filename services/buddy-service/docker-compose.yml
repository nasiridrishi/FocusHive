# ============================================================================
# FocusHive Buddy Service - Docker Compose Configuration
# ============================================================================
# Single source of truth deployment using .env file
# All configuration managed through environment variables

services:
  # ============================================================================
  # PostgreSQL Database
  # ============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: focushive-buddy-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - focushive-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60s}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Redis Cache
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: focushive-buddy-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - focushive-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Buddy Service Application
  # ============================================================================
  buddy-service:
    build:
      context: .
      dockerfile: ${DOCKERFILE_NAME:-Dockerfile.production}
      args:
        - JAR_FILE=build/libs/buddy-service.jar
    image: ${SERVICE_NAME:-buddy-service}:${SERVICE_VERSION:-latest}
    container_name: focushive-buddy-app
    environment:
      # Spring Profiles
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

      # Server Configuration
      SERVER_PORT: ${SERVER_PORT}
      MANAGEMENT_SERVER_PORT: ${MANAGEMENT_SERVER_PORT}

      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://focushive-buddy-postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: ${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: ${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE}
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: ${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT}

      # Redis Configuration
      SPRING_DATA_REDIS_HOST: focushive-buddy-redis
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_DATA_REDIS_DATABASE: ${REDIS_DATABASE}
      SPRING_DATA_REDIS_TIMEOUT: ${SPRING_DATA_REDIS_TIMEOUT}

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}

      # Logging Configuration
      LOGGING_LEVEL_ROOT: ${LOGGING_LEVEL_ROOT}
      LOGGING_LEVEL_COM_FOCUSHIVE: ${LOGGING_LEVEL_COM_FOCUSHIVE}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK}

      # Monitoring Configuration
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS}
      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: ${MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED}
      MANAGEMENT_METRICS_ENABLED: ${MANAGEMENT_METRICS_ENABLED}

      # External Service URLs
      IDENTITY_SERVICE_URL: ${IDENTITY_SERVICE_URL}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL}
      FOCUSHIVE_BACKEND_URL: ${FOCUSHIVE_BACKEND_URL}

      # Feature Flags
      BUDDY_MATCHING_ENABLED: ${BUDDY_MATCHING_ENABLED}
      BUDDY_MATCHING_CRON: ${BUDDY_MATCHING_CRON}
      BUDDY_MATCHING_BATCH_SIZE: ${BUDDY_MATCHING_BATCH_SIZE}
      BUDDY_COMPATIBILITY_THRESHOLD: ${BUDDY_COMPATIBILITY_THRESHOLD}

      # Miscellaneous
      APPLICATION_NAME: ${APPLICATION_NAME}
      APPLICATION_VERSION: ${APPLICATION_VERSION}
      ENVIRONMENT: ${ENVIRONMENT}
      SERVER_SERVLET_CONTEXT_PATH: ${SERVER_SERVLET_CONTEXT_PATH}
      API_VERSION: ${API_VERSION}

      # Application-specific configuration
      BUDDY_MAX_BUDDIES_PER_USER: ${BUDDY_MAX_BUDDIES_PER_USER}
      BUDDY_MIN_INTERACTION_SCORE: ${BUDDY_MIN_INTERACTION_SCORE}
      BUDDY_ACTIVITY_THRESHOLD_DAYS: ${BUDDY_ACTIVITY_THRESHOLD_DAYS}
      BUDDY_RECOMMENDATION_LIMIT: ${BUDDY_RECOMMENDATION_LIMIT}

    # Ports exposed for testing
    ports:
      - "8087:8087"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - focushive-shared-network
    restart: unless-stopped
    volumes:
      - ${APP_LOGS_PATH:-./logs}:/app/logs
      - ${APP_CONFIG_PATH:-./config}:/app/config:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${SERVER_PORT:-8087}/api/v1/health"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-60s}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: ${APP_MEMORY_LIMIT:-1G}
          cpus: '${APP_CPU_LIMIT:-1.0}'
        reservations:
          memory: ${APP_MEMORY_RESERVATION:-512M}
          cpus: '${APP_CPU_RESERVATION:-0.5}'

  # ============================================================================
  # Cloudflare Tunnel
  # ============================================================================
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: focushive-buddy-tunnel
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
      - TUNNEL_URL=http://buddy-service:${SERVER_PORT:-8087}
      - TUNNEL_METRICS=0.0.0.0:2000
      - TUNNEL_LOGLEVEL=info
    depends_on:
      buddy-service:
        condition: service_healthy
    networks:
      - focushive-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cloudflared", "--help"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

# ============================================================================
# Networks
# ============================================================================
networks:
  focushive-shared-network:
    name: focushive-shared-network
    driver: bridge
    external: true

# ============================================================================
# Volumes
# ============================================================================
volumes:
  postgres-data:
    name: focushive-buddy-postgres-data
    driver: local
    labels:
      - "com.focushive.service=buddy"
      - "com.focushive.type=database"

  redis-data:
    name: focushive-buddy-redis-data
    driver: local
    labels:
      - "com.focushive.service=buddy"
      - "com.focushive.type=cache"