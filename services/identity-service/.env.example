# Identity Service Environment Configuration Template
# ====================================================
# 
# SECURITY WARNING: This file contains examples only.
# Copy this file to .env and replace all values with secure ones.
# Never commit the actual .env file to version control.
#
# ====================================================

# Database Configuration - SECURITY: Use strong passwords
DB_URL=jdbc:postgresql://localhost:5433/identity_db
DB_USERNAME=identity_user
# Generate with: openssl rand -base64 24
DB_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# Redis Configuration - SECURITY: Use strong password
REDIS_HOST=localhost
REDIS_PORT=6380
# Generate with: openssl rand -base64 24
REDIS_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# JWT Configuration - SECURITY: Critical secret
# Generate with: openssl rand -base64 64 (512 bits for HS512)
JWT_SECRET=MUST_BE_SET_IN_ENVIRONMENT_VARIABLE_GENERATE_WITH_OPENSSL

# Admin User Configuration - SECURITY: Use strong password
ADMIN_USERNAME=admin
# Generate with: openssl rand -base64 16
ADMIN_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# OAuth2 Configuration
OAUTH2_ISSUER=http://localhost:8081

# Keystore Configuration - SECURITY: Use strong passwords
# Generate with: openssl rand -base64 16
KEY_STORE_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD
PRIVATE_KEY_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# OAuth2 Client Secrets
# Generate with: openssl rand -base64 32
FOCUSHIVE_CLIENT_SECRET=CHANGE_ME_USE_STRONG_PASSWORD

# CORS Configuration
CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# Server Configuration
SERVER_PORT=8081

# Security Notes:
# 1. JWT_SECRET must be at least 512 bits (64 bytes) for HS512
# 2. Use different passwords for each environment  
# 3. Rotate passwords every 90 days
# 4. Monitor for leaked credentials
# 5. Use a proper secrets management system in production
# 6. Enable audit logging for admin account access