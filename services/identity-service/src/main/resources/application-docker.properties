# Identity Service Docker Configuration
# This profile is activated when running in Docker containers
# All values are sourced from environment variables set in docker-compose.yml

# Server Configuration
server.port=${SERVER_PORT:8081}

# Database Configuration - uses environment variables from docker-compose
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Configuration for Docker
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Flyway Configuration - uses the same datasource
spring.flyway.enabled=${FLYWAY_ENABLED:true}
spring.flyway.baseline-on-migrate=${FLYWAY_BASELINE_ON_MIGRATE:true}
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-migration-naming=true
spring.flyway.out-of-order=true
spring.flyway.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.flyway.user=${DB_USER}
spring.flyway.password=${DB_PASSWORD}

# Redis Configuration - uses environment variables
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.jedis.pool.max-active=10
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=5
spring.data.redis.jedis.pool.max-wait=-1ms

# Logging Configuration for Docker
logging.level.root=INFO
logging.level.com.focushive.identity=${LOGGING_LEVEL_COM_FOCUSHIVE:INFO}
logging.level.org.springframework.security=INFO
logging.level.org.flywaydb=INFO
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:OFF}
logging.level.org.hibernate.type.descriptor.sql=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL:OFF}

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME}
spring.security.user.password=${ADMIN_PASSWORD}

# JWT Configuration - all from environment
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_ACCESS_TOKEN_EXPIRATION:3600000}
jwt.refresh-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:2592000000}
jwt.access-token-expiration-ms=${JWT_ACCESS_TOKEN_EXPIRATION:3600000}
jwt.refresh-token-expiration-ms=${JWT_REFRESH_TOKEN_EXPIRATION:2592000000}
jwt.remember-me-expiration-ms=7776000000
jwt.issuer=${JWT_ISSUER}

# RSA JWT Configuration
jwt.use-rsa=true
jwt.rsa.private-key-path=classpath:keys/jwt-private.pem
jwt.rsa.public-key-path=classpath:keys/jwt-public.pem
jwt.rsa.key-id=focushive-2025-01

# OAuth2 Authorization Server
spring.security.oauth2.authorizationserver.issuer=${AUTH_ISSUER}

# Actuator Configuration
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
management.endpoint.metrics.enabled=true
management.metrics.export.simple.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.tracing.enabled=${MANAGEMENT_TRACING_ENABLED:false}

# CORS Configuration
security.cors.allowed-origins=${CORS_ORIGINS}
security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
security.cors.allowed-headers=*
security.cors.allow-credentials=true

# Spring MVC Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Notification Service Integration
notification.service.url=${NOTIFICATION_SERVICE_URL}
notification.service.auth.enabled=true
notification.service.api-key=${NOTIFICATION_SERVICE_API_KEY:focushive-dev-api-key-12345}

# Service JWT Configuration
jwt.service.expiration=300000

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.groups-order=DESC
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.filter=true
springdoc.show-actuator=false
app.version=1.0.0-SNAPSHOT

# Encryption Configuration
app.encryption.master-key=${ENCRYPTION_MASTER_KEY}
app.encryption.salt=${ENCRYPTION_SALT}

# Admin User Configuration
app.admin.username=${ADMIN_USERNAME}
app.admin.password=${ADMIN_PASSWORD}
app.admin.email=${ADMIN_EMAIL}
app.admin.first-name=${ADMIN_FIRST_NAME}
app.admin.last-name=${ADMIN_LAST_NAME}
app.admin.auto-create=${ADMIN_AUTO_CREATE}