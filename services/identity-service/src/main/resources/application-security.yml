# ===============================================================================
# SECURITY CONFIGURATION - IDENTITY SERVICE
# ===============================================================================
# This configuration focuses exclusively on security hardening and protection
# Include this profile in production with: spring.profiles.include=security
# ===============================================================================

# ============================================================================
# SECURITY HEADERS CONFIGURATION
# ============================================================================
security:
  headers:
    # HSTS - HTTP Strict Transport Security
    hsts:
      enabled: ${SECURITY_HSTS_ENABLED:true}
      max-age: ${SECURITY_HSTS_MAX_AGE:31536000}  # 1 year
      include-subdomains: true
      preload: true
    
    # Content Security Policy
    csp:
      enabled: ${SECURITY_CSP_ENABLED:true}
      policy: >
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
        font-src 'self' https://fonts.gstatic.com;
        img-src 'self' data: https:;
        connect-src 'self' ${CONNECT_SRC_WHITELIST:};
        frame-ancestors 'none';
        base-uri 'self';
        form-action 'self';
    
    # X-Frame-Options
    frame-options:
      policy: DENY
    
    # X-Content-Type-Options
    content-type-options:
      enabled: true
    
    # X-XSS-Protection
    xss-protection:
      enabled: true
      mode: block
    
    # Referrer Policy
    referrer-policy:
      policy: strict-origin-when-cross-origin
    
    # Permissions Policy
    permissions-policy:
      enabled: true
      policy: >
        camera=(),
        microphone=(),
        geolocation=(),
        payment=(),
        usb=(),
        magnetometer=(),
        gyroscope=(),
        accelerometer=()

  # ============================================================================
  # SESSION SECURITY CONFIGURATION
  # ============================================================================
  session:
    # Cookie security settings
    cookie:
      secure: ${SECURITY_COOKIE_SECURE:true}  # HTTPS only
      http-only: true
      same-site: strict
      name: ${SECURITY_COOKIE_NAME:JSESSIONID}
      domain: ${SECURITY_COOKIE_DOMAIN}  # REQUIRED in production
      path: /
      max-age: ${SECURITY_COOKIE_MAX_AGE:1800}  # 30 minutes
    
    # Session fixation protection
    fixation-protection: migrate-session
    
    # Session timeout
    timeout: ${SECURITY_SESSION_TIMEOUT:PT30M}  # 30 minutes
    
    # Maximum concurrent sessions per user
    max-sessions: ${SECURITY_MAX_SESSIONS_PER_USER:3}
    
    # Prevent session hijacking
    prevent-hijacking: true

  # ============================================================================
  # CSRF PROTECTION CONFIGURATION
  # ============================================================================
  csrf:
    # Enable CSRF protection for state-changing operations
    enabled: ${SECURITY_CSRF_ENABLED:true}
    token:
      repository: cookie  # Use cookie-based CSRF tokens
      header-name: X-CSRF-TOKEN
      parameter-name: _csrf
    cookie:
      name: XSRF-TOKEN
      http-only: false  # Allow JavaScript access for SPA
      secure: ${SECURITY_COOKIE_SECURE:true}
      same-site: strict

  # ============================================================================
  # PASSWORD SECURITY CONFIGURATION
  # ============================================================================
  password:
    # Password encoding
    encoder:
      type: bcrypt
      strength: ${PASSWORD_ENCODER_STRENGTH:12}  # Strong encryption
    
    # Password policy
    policy:
      min-length: ${PASSWORD_MIN_LENGTH:12}
      max-length: ${PASSWORD_MAX_LENGTH:128}
      require-uppercase: ${PASSWORD_REQUIRE_UPPERCASE:true}
      require-lowercase: ${PASSWORD_REQUIRE_LOWERCASE:true}
      require-digit: ${PASSWORD_REQUIRE_DIGIT:true}
      require-special: ${PASSWORD_REQUIRE_SPECIAL:true}
      forbidden-patterns:
        - password
        - 123456
        - qwerty
        - admin
        - focushive
      max-consecutive-chars: 3
      prevent-username-inclusion: true
    
    # Password history
    history:
      enabled: true
      remember-count: ${PASSWORD_HISTORY_COUNT:5}
    
    # Password expiration
    expiration:
      enabled: ${PASSWORD_EXPIRATION_ENABLED:false}
      days: ${PASSWORD_EXPIRATION_DAYS:90}
      warning-days: ${PASSWORD_EXPIRATION_WARNING_DAYS:14}

  # ============================================================================
  # ACCOUNT SECURITY CONFIGURATION
  # ============================================================================
  account:
    # Account lockout policy
    lockout:
      enabled: true
      max-failed-attempts: ${ACCOUNT_LOCKOUT_MAX_ATTEMPTS:5}
      lockout-duration: ${ACCOUNT_LOCKOUT_DURATION:PT15M}  # 15 minutes
      reset-time: ${ACCOUNT_LOCKOUT_RESET_TIME:PT1H}  # Reset counter after 1 hour
    
    # Account verification
    verification:
      email-required: ${ACCOUNT_EMAIL_VERIFICATION_REQUIRED:true}
      phone-required: ${ACCOUNT_PHONE_VERIFICATION_REQUIRED:false}
      expire-unverified-accounts: ${ACCOUNT_EXPIRE_UNVERIFIED:true}
      unverified-account-ttl: ${ACCOUNT_UNVERIFIED_TTL:P7D}  # 7 days
    
    # Account monitoring
    monitoring:
      track-login-failures: true
      track-password-changes: true
      track-profile-changes: true
      suspicious-activity-threshold: ${ACCOUNT_SUSPICIOUS_THRESHOLD:10}

  # ============================================================================
  # IP ADDRESS SECURITY CONFIGURATION
  # ============================================================================
  ip-security:
    # IP whitelisting/blacklisting
    whitelist:
      enabled: ${IP_WHITELIST_ENABLED:false}
      addresses: ${IP_WHITELIST_ADDRESSES:}  # Comma-separated list
    
    blacklist:
      enabled: ${IP_BLACKLIST_ENABLED:true}
      addresses: ${IP_BLACKLIST_ADDRESSES:}  # Comma-separated list
    
    # GeoIP blocking
    geo-blocking:
      enabled: ${GEO_BLOCKING_ENABLED:false}
      allowed-countries: ${GEO_ALLOWED_COUNTRIES:}  # ISO country codes
      blocked-countries: ${GEO_BLOCKED_COUNTRIES:}  # ISO country codes
    
    # Rate limiting by IP
    rate-limiting:
      enabled: true
      max-requests-per-minute: ${IP_RATE_LIMIT_RPM:60}
      max-requests-per-hour: ${IP_RATE_LIMIT_RPH:1000}
      blacklist-threshold: ${IP_BLACKLIST_THRESHOLD:100}  # Auto-blacklist after violations

  # ============================================================================
  # API SECURITY CONFIGURATION
  # ============================================================================
  api:
    # API versioning
    versioning:
      strategy: header  # Use Accept-Version header
      deprecation-warning: true
      supported-versions: v1,v2
    
    # Request validation
    validation:
      max-request-size: ${API_MAX_REQUEST_SIZE:10MB}
      max-json-depth: ${API_MAX_JSON_DEPTH:10}
      max-array-length: ${API_MAX_ARRAY_LENGTH:1000}
      max-string-length: ${API_MAX_STRING_LENGTH:10000}
    
    # Response security
    response:
      remove-server-header: true
      remove-x-powered-by: true
      add-security-headers: true
      sanitize-error-messages: true

  # ============================================================================
  # OAUTH2 SECURITY CONFIGURATION
  # ============================================================================
  oauth2:
    # Authorization server security
    authorization-server:
      # Require PKCE for all clients
      require-pkce: ${OAUTH2_REQUIRE_PKCE:true}
      
      # Require consent for all scopes
      require-consent: true
      
      # Token endpoint security
      token-endpoint:
        client-authentication-methods:
          - client_secret_basic
          - client_secret_post
          - private_key_jwt
        allowed-grant-types:
          - authorization_code
          - refresh_token
          - client_credentials
        # Disable implicit and password grants for security
        disabled-grant-types:
          - implicit
          - password
      
      # Authorization endpoint security
      authorization-endpoint:
        require-https: true
        max-age: PT300S  # 5 minutes
      
      # Client registration security
      client-registration:
        require-https-redirect-uris: true
        validate-redirect-uris: true
        max-redirect-uris: 5
    
    # Resource server security
    resource-server:
      jwt:
        # JWT validation
        validate-issuer: true
        validate-audience: true
        validate-expiration: true
        validate-not-before: true
        clock-skew: PT30S  # Allow 30 seconds clock skew
        
        # JWT signing algorithm whitelist
        allowed-algorithms:
          - RS256
          - RS384
          - RS512
        
        # Disable symmetric algorithms for security
        disabled-algorithms:
          - HS256
          - HS384
          - HS512

  # ============================================================================
  # THREAT DETECTION CONFIGURATION
  # ============================================================================
  threat-detection:
    # Anomaly detection
    anomaly:
      enabled: ${THREAT_DETECTION_ENABLED:true}
      sensitivity: ${THREAT_DETECTION_SENSITIVITY:medium}  # low, medium, high
      learning-period: ${THREAT_DETECTION_LEARNING_PERIOD:P7D}  # 7 days
    
    # Suspicious activity patterns
    patterns:
      # Multiple failed logins from same IP
      failed-login-threshold: 10
      failed-login-window: PT5M  # 5 minutes
      
      # Rapid requests from same IP
      request-burst-threshold: 100
      request-burst-window: PT1M  # 1 minute
      
      # Multiple account lockouts
      account-lockout-threshold: 5
      account-lockout-window: PT15M  # 15 minutes
      
      # Geographic anomalies
      geographic-anomaly-enabled: ${THREAT_GEOGRAPHIC_ENABLED:true}
      geographic-anomaly-threshold: 1000  # km distance threshold
    
    # Response actions
    response:
      auto-block-ip: ${THREAT_AUTO_BLOCK_IP:true}
      auto-lock-account: ${THREAT_AUTO_LOCK_ACCOUNT:true}
      send-security-alerts: ${THREAT_SEND_ALERTS:true}
      log-security-events: true

  # ============================================================================
  # CERTIFICATE AND TLS CONFIGURATION
  # ============================================================================
  tls:
    # TLS version restrictions
    min-version: ${TLS_MIN_VERSION:1.2}
    max-version: ${TLS_MAX_VERSION:1.3}
    
    # Cipher suite restrictions
    allowed-ciphers:
      - TLS_AES_256_GCM_SHA384
      - TLS_CHACHA20_POLY1305_SHA256
      - TLS_AES_128_GCM_SHA256
      - ECDHE-RSA-AES256-GCM-SHA384
      - ECDHE-RSA-AES128-GCM-SHA256
    
    # Certificate validation
    certificate:
      validate-chain: true
      validate-hostname: true
      validate-expiration: true
      ocsp-enabled: ${TLS_OCSP_ENABLED:true}
    
    # HSTS configuration
    hsts:
      max-age: 31536000  # 1 year
      include-subdomains: true
      preload: true

# ============================================================================
# SPRING SECURITY CONFIGURATION
# ============================================================================
spring:
  security:
    # Filter configuration
    filter:
      order: -100  # High priority for security filters
    
    # Remember-me configuration
    remember-me:
      key: ${REMEMBER_ME_KEY}  # REQUIRED: Strong secret key
      token-validity-seconds: ${REMEMBER_ME_VALIDITY:2592000}  # 30 days
      always-remember: false
      use-secure-cookie: ${SECURITY_COOKIE_SECURE:true}
    
    # LDAP configuration (if used)
    ldap:
      embedded: false  # Never use embedded LDAP in production
      urls: ${LDAP_URLS:}
      base: ${LDAP_BASE:}
      username: ${LDAP_USERNAME:}
      password: ${LDAP_PASSWORD:}
      # LDAP security
      authentication-strategy: simple
      referral: follow
      connection-timeout: PT5S
      read-timeout: PT10S

# ============================================================================
# LOGGING SECURITY CONFIGURATION
# ============================================================================
logging:
  # Security-specific loggers
  level:
    # Security events
    org.springframework.security.web.authentication: INFO
    org.springframework.security.web.access: INFO
    org.springframework.security.oauth2: INFO
    
    # Custom security loggers
    com.focushive.identity.security: INFO
    com.focushive.identity.audit: INFO
    
    # Threat detection
    THREAT_DETECTION: INFO
    SECURITY_VIOLATIONS: WARN
    ACCOUNT_SECURITY: INFO

# ============================================================================
# ACTUATOR SECURITY CONFIGURATION
# ============================================================================
management:
  security:
    enabled: true
    roles: ADMIN,SECURITY_ADMIN
  
  # Secure actuator endpoints
  endpoint:
    auditevents:
      enabled: true
    sessions:
      enabled: true
    threaddump:
      enabled: false  # Disable for security
    heapdump:
      enabled: false  # Disable for security
    env:
      enabled: false  # Disable for security - may expose secrets
    configprops:
      enabled: false  # Disable for security - may expose secrets

# ============================================================================
# ENVIRONMENT VARIABLES DOCUMENTATION
# ============================================================================
# Required Environment Variables for Production:
#
# Basic Security:
# - SECURITY_COOKIE_DOMAIN: Domain for secure cookies
# - REMEMBER_ME_KEY: Strong secret key for remember-me functionality
#
# JWT Security:
# - JWT_KEY_STORE_PASSWORD: Password for JWT keystore
# - JWT_PRIVATE_KEY_PASSWORD: Password for JWT private key
#
# Database Security:
# - DB_USER: Database username (remove defaults)
# - DB_PASSWORD: Database password (remove defaults)
#
# Redis Security:
# - REDIS_PASSWORD: Redis authentication password
# - REDIS_CLUSTER_NODES: Redis cluster node addresses
#
# OAuth2 Security:
# - FOCUSHIVE_FRONTEND_CLIENT_ID: Frontend OAuth2 client ID
# - FOCUSHIVE_FRONTEND_CLIENT_SECRET: Frontend OAuth2 client secret
# - FOCUSHIVE_BACKEND_CLIENT_ID: Backend OAuth2 client ID
# - FOCUSHIVE_BACKEND_CLIENT_SECRET: Backend OAuth2 client secret
#
# CORS Security:
# - CORS_ORIGINS: Comma-separated list of allowed origins (HTTPS only)
#
# Optional Security Enhancements:
# - IP_WHITELIST_ADDRESSES: Comma-separated IP whitelist
# - IP_BLACKLIST_ADDRESSES: Comma-separated IP blacklist
# - GEO_ALLOWED_COUNTRIES: ISO country codes for geo-restrictions
# - THREAT_DETECTION_ENABLED: Enable/disable threat detection
# - PASSWORD_ENCODER_STRENGTH: BCrypt strength (10-15, default 12)
#
# ============================================================================