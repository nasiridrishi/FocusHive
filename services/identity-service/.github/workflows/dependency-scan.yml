name: Dependency Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache NVD Data
        uses: actions/cache@v3
        with:
          path: ~/.gradle/dependency-check-data
          key: ${{ runner.os }}-nvd-data-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-nvd-data-

      - name: Run OWASP Dependency Check
        run: ./gradlew dependencyCheckAnalyze
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - name: Upload Dependency Check Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: build/reports/dependency-check-report.html

      - name: Check for High/Critical Vulnerabilities
        run: |
          if [ -f build/reports/dependency-check-report.json ]; then
            high_count=$(grep -o '"severity":"HIGH"' build/reports/dependency-check-report.json | wc -l)
            critical_count=$(grep -o '"severity":"CRITICAL"' build/reports/dependency-check-report.json | wc -l)

            echo "Found $high_count HIGH severity vulnerabilities"
            echo "Found $critical_count CRITICAL severity vulnerabilities"

            if [ $critical_count -gt 0 ]; then
              echo "‚ùå CRITICAL vulnerabilities found! Build failed."
              exit 1
            fi

            if [ $high_count -gt 5 ]; then
              echo "‚ö†Ô∏è Too many HIGH severity vulnerabilities (>5). Review required."
              exit 1
            fi
          fi

      - name: Comment PR with Security Summary
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'build/reports/dependency-check-report.json';

            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const vulnCount = report.dependencies?.filter(d => d.vulnerabilities?.length > 0).length || 0;

              const comment = `## üîí Security Scan Results

              **Dependency Check:** ${vulnCount === 0 ? '‚úÖ Passed' : '‚ö†Ô∏è Vulnerabilities Found'}
              **Vulnerable Dependencies:** ${vulnCount}

              [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

              _Last scan: ${new Date().toISOString()}_`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check licenses
        run: |
          ./gradlew generateLicenseReport || true

          # Check for copyleft licenses
          if grep -i "GPL\|AGPL\|LGPL" build/reports/licenses/* 2>/dev/null; then
            echo "‚ö†Ô∏è Copyleft licenses detected. Review required."
            exit 1
          fi

  update-check:
    name: Check for Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check for dependency updates
        run: |
          ./gradlew dependencyUpdates -Drevision=release

          # Create issue if updates are available
          if grep -q "The following dependencies have later" build/dependencyUpdates/report.txt; then
            echo "::notice::Dependency updates available. Consider updating."
          fi