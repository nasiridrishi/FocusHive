# =======================================================
# TEST-SPECIFIC APPLICATION CONFIGURATION
# =======================================================
# This configuration is optimized for testing with H2 in-memory database
# and mock services to achieve 100% test success rate.

spring:
  # Allow bean definition overriding for tests
  main:
    allow-bean-definition-overriding: true
    lazy-initialization: true  # Speed up test startup
  
  # =======================================================
  # H2 DATABASE CONFIGURATION WITH POSTGRESQL COMPATIBILITY
  # =======================================================
  datasource:
    # H2 with comprehensive PostgreSQL compatibility mode
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS CLOB\;CREATE DOMAIN IF NOT EXISTS UUID AS VARCHAR(36)
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
    # Connection pool optimized for tests
    hikari:
      maximum-pool-size: 5  # Smaller pool for tests
      minimum-idle: 1
      connection-timeout: 10000
      idle-timeout: 300000
      max-lifetime: 600000
      leak-detection-threshold: 30000
      connection-test-query: SELECT 1
  
  # Initialize schema with H2-compatible types  
  sql:
    init:
      mode: always
      schema-locations: classpath:test-schema.sql
      continue-on-error: true  # Continue if schema already exists
  
  # =======================================================
  # JPA CONFIGURATION FOR H2 COMPATIBILITY
  # =======================================================
  jpa:
    hibernate:
      ddl-auto: create-drop  # Clean database for each test
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: false  # Disable for performance unless debugging
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        # Performance optimizations
        format_sql: false
        use_sql_comments: false
        globally_quoted_identifiers: false
        hbm2ddl:
          halt_on_error: false
          auto: create-drop
        # H2 specific settings
        dialect.h2.use_legacy_uuid_type: false
        temp.use_jdbc_metadata_defaults: false
        # Batch processing (disabled for tests for simplicity)
        jdbc:
          batch_size: 0
          batch_versioned_data: false
        order_inserts: false
        order_updates: false
        # Disable second level cache for tests
        cache:
          use_second_level_cache: false
          use_query_cache: false
          region.factory_class: org.hibernate.cache.internal.NoCachingRegionFactory
    # Repository configuration
    repositories:
      bootstrap-mode: lazy
      enabled: true
    # Disable schema validation for tests
    defer-datasource-initialization: true
  
  # =======================================================
  # DISABLE EXTERNAL DEPENDENCIES FOR TESTING
  # =======================================================
  autoconfigure:
    exclude:
      # Redis - completely disabled for tests
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration  
      - org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration
      # WebSocket - completely disabled to avoid handler errors
      - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
      - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration
      - org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration
      # Messaging - disabled to prevent WebSocket dependencies
      - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
      - org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration
      - org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration
      # Spring Messaging - disable all messaging infrastructure
      - org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration
      - org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration
      # Security messaging - disable WebSocket security
      - org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      # External API clients
      - org.springframework.cloud.openfeign.FeignAutoConfiguration
      # Actuator security (conflicts in test env)
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
  
  # Cache configuration - use simple in-memory cache for tests
  cache:
    type: simple  # Use simple in-memory cache instead of Redis
    cache-names: userPresence,activeFocusSession,hiveActiveUsers,hiveFocusSessions,dailySummaries,dailySummaryRanges,hiveMembership,hiveUserIds,userProfiles,hiveDetails,userSettings,systemSettings,notificationTemplates
  
  # =======================================================
  # FLYWAY CONFIGURATION FOR TESTS
  # =======================================================
  flyway:
    enabled: false  # Disabled - use JPA schema generation for faster tests
    # Alternative: enable with H2-compatible locations if needed
    # enabled: true
    # locations: classpath:db/migration/h2
    # baseline-on-migrate: true
    # validate-on-migrate: false
  
  # =======================================================
  # SECURITY CONFIGURATION FOR TESTS
  # =======================================================
  security:
    jwt:
      secret: test-jwt-secret-key-that-is-long-enough-for-hs256-algorithm-minimum-256-bits-for-testing
      expiration: 3600000  # 1 hour for tests
      refresh-expiration: 7200000  # 2 hours for tests
    # Basic auth for tests (if needed)
    user:
      name: testuser
      password: testpass
      roles: USER,ADMIN
  
  # H2 Console (useful for debugging tests)
  h2:
    console:
      enabled: false  # Enable only when debugging
      path: /h2-console
      settings:
        web-allow-others: true
  
  # Disable cloud features completely
  cloud:
    discovery:
      enabled: false
    service-registry:
      auto-registration:
        enabled: false
    openfeign:
      client:
        enabled: false
        config:
          default:
            connect-timeout: 1000
            read-timeout: 1000
  
  # Disable WebSocket features completely for tests
  websocket:
    enabled: false
  
  # Disable STOMP messaging
  stomp:
    enabled: false
    
  # Disable messaging infrastructure
  messaging:
    enabled: false
    websocket:
      enabled: false

# =======================================================
# SERVER CONFIGURATION
# =======================================================
server:
  port: 0  # Random port for parallel test execution
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param  # Include stack trace in test errors

# =======================================================
# APPLICATION FEATURE CONFIGURATION
# =======================================================
app:
  version: test-1.0.0
  features:
    # Disable all optional features for core tests
    forum:
      enabled: false
    buddy:
      enabled: false 
    analytics:
      enabled: true
    authentication:
      enabled: false
    redis:
      enabled: false
    health:
      enabled: false
    websocket:
      enabled: false  # Disable WebSocket features in tests
  # Test-specific settings
  test:
    data:
      cleanup: true  # Clean up test data after tests
      mock-external-services: true

# =======================================================
# EXTERNAL SERVICE MOCK CONFIGURATION
# =======================================================
# Identity service configuration (mocked for tests)
identity:
  service:
    url: http://localhost:8081  # Mock server URL
    connect-timeout: 1000       # Short timeout for tests
    read-timeout: 2000          # Short timeout for tests
    api-key: test-api-key
    # Test user configuration
    mock:
      enabled: true
      users:
        test-user:
          id: "550e8400-e29b-41d4-a716-446655440000"
          email: "test@example.com"
          username: "testuser"
          roles: ["USER"]

# =======================================================
# ACTUATOR CONFIGURATION FOR TESTS
# =======================================================
management:
  endpoints:
    enabled-by-default: false  # Disable by default for tests
    web:
      exposure:
        include: health,info  # Only essential endpoints
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
  # Disable metrics for tests
  metrics:
    export:
      prometheus:
        enabled: false
    web:
      server:
        request:
          autotime:
            enabled: false
  # Disable tracing for tests
  tracing:
    enabled: false
    sampling:
      probability: 0.0

# =======================================================
# LOGGING CONFIGURATION FOR TESTS
# =======================================================
logging:
  level:
    root: WARN                    # Reduce noise
    com.focushive: INFO           # Application logs at INFO
    org.springframework: WARN     # Spring framework logs
    org.springframework.security: WARN  # Security logs
    org.springframework.web: WARN       # Web logs
    org.springframework.boot: WARN      # Boot logs
    org.springframework.test: WARN      # Test framework logs
    org.hibernate: WARN           # Hibernate logs
    org.hibernate.SQL: WARN       # SQL logs (enable for debugging)
    org.hibernate.type: WARN      # SQL parameter logs
    org.h2: WARN                  # H2 database logs
    org.flyway: WARN              # Flyway logs
    org.springframework.transaction: WARN  # Transaction logs
    org.springframework.orm: WARN        # ORM logs
    org.springframework.data: WARN       # Spring Data logs
    feign: WARN                   # Feign client logs
    # Test-specific logging
    org.springframework.test.context: INFO  # Test context info
    org.springframework.boot.test: INFO     # Test boot info
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{testClass}] %logger{36} - %msg%n"
    level: "%5p [TEST]"  # Mark test logs
  # Log to console only in tests
  config: classpath:logback-test.xml

# =======================================================
# RESILIENCE4J CONFIGURATION (DISABLED FOR TESTS)
# =======================================================
resilience4j:
  circuitbreaker:
    instances:
      identity-service:
        registerHealthIndicator: false
        enabled: false  # Disable circuit breaker in tests
  retry:
    instances:
      identity-service:
        enabled: false  # Disable retry in tests
  timelimiter:
    instances:
      identity-service:
        timeoutDuration: 1s  # Very short timeout for tests
  ratelimiter:
    instances:
      identity-service:
        enabled: false  # Disable rate limiting in tests
  bulkhead:
    instances:
      identity-service:
        enabled: false  # Disable bulkhead in tests

# =======================================================
# FEIGN CLIENT CONFIGURATION (MOCKED)
# =======================================================
feign:
  client:
    config:
      default:
        connectTimeout: 1000  # Short timeout for tests
        readTimeout: 2000     # Short timeout for tests
        loggerLevel: none     # Disable logging
      identity-service:
        url: http://localhost:8081  # Mock server
        connectTimeout: 1000
        readTimeout: 2000
  circuitbreaker:
    enabled: false  # Disable for tests

# =======================================================
# TEST DATA CONFIGURATION
# ======================================================= 
testdata:
  users:
    # Default test user
    default:
      id: "123e4567-e89b-12d3-a456-426614174000"
      email: "testuser@focushive.com"
      username: "testuser"
      displayName: "Test User"
      enabled: true
      roles: ["USER"]
    # Admin test user  
    admin:
      id: "123e4567-e89b-12d3-a456-426614174001"
      email: "admin@focushive.com"
      username: "admin"
      displayName: "Admin User"
      enabled: true
      roles: ["USER", "ADMIN"]
  hives:
    # Default test hive
    default:
      id: "456e7890-e89b-12d3-a456-426614174000"
      name: "Test Hive"
      description: "Test hive for unit tests"
      isPublic: true
      maxMembers: 10