apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-service-ingress
  namespace: focushive-notification
  labels:
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: focushive
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-client-ip: "100"
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Connection and timeout settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # CORS handling
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Correlation-ID"
    nginx.ingress.kubernetes.io/cors-expose-headers: "X-Correlation-ID,X-Request-ID"
    
    # SSL and TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Monitoring and logging
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
spec:
  tls:
  - hosts:
    - api.focushive.app
    - notification-api.focushive.app
    secretName: notification-service-tls
  rules:
  - host: api.focushive.app
    http:
      paths:
      - path: /notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
      - path: /api/notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
      - path: /api/preferences
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
      - path: /api/templates
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
      - path: /api/admin
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
  - host: notification-api.focushive.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-service-internal-ingress
  namespace: focushive-notification
  labels:
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/component: ingress-internal
    app.kubernetes.io/part-of: focushive
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Internal access - higher rate limits
    nginx.ingress.kubernetes.io/rate-limit-client-ip: "1000"
    nginx.ingress.kubernetes.io/rate-limit-rps: "100"
    
    # Whitelist internal networks
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  rules:
  - host: notification-service.internal
    http:
      paths:
      - path: /actuator
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8083
      - path: /swagger-ui
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
      - path: /v3/api-docs
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80