{
  "info": {
    "name": "FocusHive Notification Service API",
    "description": "Comprehensive API collection for the FocusHive Notification Service. This collection includes all endpoints for notification management, user preferences, templates, and administrative operations.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8083",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "test-user-123",
      "type": "string"
    },
    {
      "key": "notification_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/health",
              "host": ["{{base_url}}"],
              "path": ["actuator", "health"]
            }
          },
          "response": []
        },
        {
          "name": "System Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/info",
              "host": ["{{base_url}}"],
              "path": ["actuator", "info"]
            }
          },
          "response": []
        },
        {
          "name": "Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/metrics",
              "host": ["{{base_url}}"],
              "path": ["actuator", "metrics"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notification Management",
      "item": [
        {
          "name": "Create Notification",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has notification id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.collectionVariables.set('notification_id', jsonData.id);",
                  "});",
                  "",
                  "pm.test(\"Notification has correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('userId');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData).to.have.property('type');",
                  "    pm.expect(jsonData.isRead).to.eql(false);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"type\": \"GENERAL\",\n  \"title\": \"Welcome to FocusHive\",\n  \"content\": \"Thank you for joining FocusHive! Get started by exploring your dashboard.\",\n  \"actionUrl\": \"https://app.focushive.com/welcome\",\n  \"data\": {\n    \"welcomeStep\": 1,\n    \"features\": [\"dashboard\", \"tasks\", \"calendar\"]\n  },\n  \"priority\": \"NORMAL\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/notifications",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications?userId={{user_id}}&page=0&size=20",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Unread Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications/unread?userId={{user_id}}&page=0&size=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications", "unread"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications/unread/count?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications", "unread", "count"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications/{{notification_id}}/read?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications", "{{notification_id}}", "read"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications/read-all?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications", "read-all"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/notifications/{{notification_id}}?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "notifications", "{{notification_id}}"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notification Preferences",
      "item": [
        {
          "name": "Get User Preferences",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/preferences/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "preferences", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Preferences",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailEnabled\": true,\n  \"pushEnabled\": true,\n  \"inAppEnabled\": true,\n  \"frequency\": \"IMMEDIATE\",\n  \"quietHoursStart\": \"22:00\",\n  \"quietHoursEnd\": \"08:00\",\n  \"timezone\": \"America/New_York\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/preferences/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "preferences", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Default Preferences",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/preferences/{{user_id}}/defaults",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "preferences", "{{user_id}}", "defaults"]
            }
          },
          "response": []
        },
        {
          "name": "Get Digest Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/preferences/{{user_id}}/digest/summary",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "preferences", "{{user_id}}", "digest", "summary"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notification Templates",
      "item": [
        {
          "name": "Get Template by Type and Language",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/templates/WELCOME/en",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "templates", "WELCOME", "en"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/templates?page=0&size=20",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "templates"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"WELCOME\",\n  \"language\": \"en\",\n  \"subject\": \"Welcome to {{appName}}!\",\n  \"title\": \"Welcome, {{userName}}!\",\n  \"body\": \"Thank you for joining {{appName}}. Get started by {{actionText}}.\",\n  \"variables\": [\"appName\", \"userName\", \"actionText\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/templates",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "templates"]
            }
          },
          "response": []
        },
        {
          "name": "Process Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"templateId\": \"template-789\",\n  \"variables\": {\n    \"appName\": \"FocusHive\",\n    \"userName\": \"John Doe\",\n    \"actionText\": \"exploring your dashboard\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/templates/process",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "templates", "process"]
            }
          },
          "response": []
        },
        {
          "name": "Get Template Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/templates/statistics",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "templates", "statistics"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Administrative Operations",
      "item": [
        {
          "name": "Get System Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/health",
              "host": ["{{base_url}}"],
              "path": ["admin", "health"]
            }
          },
          "response": []
        },
        {
          "name": "Get System Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Clear Cache",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/cache/clear",
              "host": ["{{base_url}}"],
              "path": ["admin", "cache", "clear"]
            }
          },
          "response": []
        },
        {
          "name": "Run Cleanup",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/cleanup/run",
              "host": ["{{base_url}}"],
              "path": ["admin", "cleanup", "run"]
            }
          },
          "response": []
        },
        {
          "name": "Get Cleanup Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/cleanup/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "cleanup", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Export Archived Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/cleanup/export",
              "host": ["{{base_url}}"],
              "path": ["admin", "cleanup", "export"]
            }
          },
          "response": []
        },
        {
          "name": "Cleanup User Notifications",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/cleanup/user/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "cleanup", "user", "{{user_id}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set up common variables",
          "if (!pm.collectionVariables.get('user_id')) {",
          "    pm.collectionVariables.set('user_id', 'test-user-123');",
          "}",
          "",
          "// Add timestamp to requests for tracking",
          "pm.collectionVariables.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global tests for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct headers', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ]
}